async function d(t,e,a){var o=await new Promise(function(l,n){try{let r="WebRTC:";switch(t.toLowerCase()){case"log":{console.log(r+" log: "+e+" : ",a);break}case"warn":{console.warn(r+" warn: "+e+" : ",a);break}case"error":{console.error(r+" error: "+e+" : ",a);break}default:{console.info(r+" info: "+e+" : ",a);break}}l("ok")}catch(r){n(r)}})}var S=class{contactPeerOptions;peerConnection;signalling;closed;uniqueID;applicationID;contactDetails;mediaRecorder;isData;fileName;fileSize;fileType;fileLastModified;fileToSend;receiveMedia;remoteStream;remoteStreamSenders;remoteStreamTransceivers;remoteStreamVideoElement;receiveDataChannel;sendDataChannel;parent;remoteTracks;sessionId;sessionIdRemote;mediaStreamTracks;eventContactPeer;constructor(t){this.contactPeerOptions=t;let e=this;this.closed=!1;let a;this.parent=t.parent,this.signalling=t.signalling,this.mediaRecorder=null,this.uniqueID=t.uniqueID,this.applicationID=t.applicationID,this.contactDetails="",this.receiveDataChannel=null,this.sendDataChannel=null;let c=[],o=0,l=0;this.isData=t.isData,this.fileName="",this.fileSize=0,this.fileType="",this.fileLastModified=0,this.fileToSend=null,this.receiveMedia=t.receiveOfferMedia,this.remoteStream=null,this.remoteStreamSenders=[],this.remoteStreamTransceivers=[],this.remoteStreamVideoElement=null,this.remoteTracks=[],this.sessionId="",this.sessionIdRemote="",this.mediaStreamTracks=[];try{this.peerConnection=new RTCPeerConnection(this.parent.config.peerConnectionConfiguration)}catch(n){d("error","Error connecting to RTCPeerConnection",n)}if(this.peerConnection){this.peerConnection.onicecandidate=function(n){let r={data:n,signalling:e.signalling};e.onIceCandidateHandler(r),e.eventContactPeer("peerContactEventICECandidate","Peer ICE candidate.",e,n)},this.peerConnection.oniceconnectionstatechange=function(n){e.eventContactPeer("peerContactEventICEStateChange","Peer ICE connection state changed.",e,n)},this.peerConnection.onicecandidateerror=function(n){e.eventContactPeer("peerContactEventICECandidateError","Peer ICE candidate error.",e,n)},this.peerConnection.onnegotiationneeded=function(n){e.eventContactPeer("peerContactEventNegotiationNeeded","Peer negotiation needed.",e,n)},this.peerConnection.onsignalingstatechange=function(n){e.eventContactPeer("peerContactEventSignalingStateChange","Peer signaling connection state changed.",e,n)},this.peerConnection.ontrack=function(n){e.eventContactPeer("peerContactEventAddStream","Peer connection stream added.",e,n)},this.peerConnection.ondatachannel=function(n){c=[],o=0,e.receiveDataChannel=n.channel,e.receiveDataChannel.binaryType="arraybuffer",e.receiveDataChannel.onmessage=function(r){c.push(r.data),o+=r.data.byteLength,e.eventContactPeer("peerContactEventDataChannelReceivedSize","Peer connection data channel received size.",e,o),o>=e.fileSize&&(e.eventContactPeer("peerContactEventDataChannelReceiveComplete","Peer connection data channel received complete.",e,c),c=[],e.receiveDataChannel.close(),e.receiveDataChannel=null)},e.receiveDataChannel.onopen=function(){if(e.receiveDataChannel){var r=e.receiveDataChannel.readyState;e.eventContactPeer("peerContactEventDataChannelOpen","Peer connection data channel open.",e,r)}},e.receiveDataChannel.onclose=function(){if(e.receiveDataChannel){var r=e.receiveDataChannel.readyState;e.eventContactPeer("peerContactEventDataChannelClose","Peer connection data channel close.",e,r)}},e.receiveDataChannel.onerror=function(r){e.eventContactPeer("peerContactEventDataChannelError","Peer connection data channel error.",e,r)}};try{e.sendDataChannel=this.peerConnection.createDataChannel("sendReceiveDataChannel_"+this.uniqueID+"_"+this.applicationID),e.sendDataChannel.binaryType="arraybuffer",e.sendDataChannel.onopen=function(){var n=e.fileToSend;if(!(!n||n.size===0)&&(l=0,e.sendDataChannel)){var r=e.sendDataChannel.readyState;e.eventContactPeer("peerContactEventDataChannelOpen","Peer connection data channel open.",e,r);var i=8096,s=function(g){var p=new FileReader;p.onload=function(I){return function(h){e.sendDataChannel.send(h.target.result),n.size>g+h.target.result.byteLength&&window.setTimeout(s,0,g+i),l=g+h.target.result.byteLength,e.eventContactPeer("peerContactEventDataChannelSentSize","Peer connection data channel sent size.",e,l),l>=n.size&&e.eventContactPeer("peerContactEventDataChannelSentComplete","Peer connection data channel sent complete.",e,!0)}}(n);var f=n.slice(g,g+i);p.readAsArrayBuffer(f)};s(0)}},e.sendDataChannel.onclose=function(){if(e.sendDataChannel){var n=e.sendDataChannel.readyState;e.eventContactPeer("peerContactEventDataChannelClose","Peer connection data channel close.",e,n)}},e.sendDataChannel.onerror=function(n){e.eventContactPeer("peerContactEventDataChannelError","Peer connection data channel error.",e,n)},e.sendDataChannel.onmessage=function(n){e.eventContactPeer("peerContactEventDataChannelSentMessage","Peer connection data channel sent message.",e,n)}}catch(n){d("error","Error creating data channel on RTCPeerConnection",n)}}}setSessionId(t){this.sessionId=t}getSessionId(){return this.sessionId}setSessionIdRemote(t){this.sessionIdRemote=t}getSessionIdRemote(){return this.sessionIdRemote}getTracks(){return this.remoteTracks}setTracks(t){this.remoteTracks=t}onContactPeerEventHandler(t){this.eventContactPeer=t}sendMessage(t){let e=this.uniqueID,a=this.applicationID;this.signalling.sendMessage(e,a,t)}sendState(t){let e=this.uniqueID,a=this.applicationID;this.signalling.sendClientState(e,a,t)}sendDetails(t){let e=this.uniqueID,a=this.applicationID;this.signalling.sendClientDetails(e,a,t)}noAnswer(){let t=this.uniqueID,e=this.applicationID;this.signalling.noAnswer(t,e)}isAvailable(){let t=this.uniqueID,e=this.applicationID;this.signalling.contactAvailable(t,e)}sendEndCall(){let t=this.uniqueID,e=this.applicationID;this.signalling.sendEndCallToContact(t,e)}setContactInfo(t,e){this.uniqueID=t,this.applicationID=e}getUniqueID(){return this.uniqueID}getApplicationID(){return this.applicationID}setContactDetails(t){this.contactDetails=t}getContactDetails(){return this.contactDetails}setRemoteStreamToVideoElement(t,e){if(e&&e.length>0){let a=this;return this.remoteStream=e[0],this.remoteStream.onremovetrack=c=>{a.eventContactPeer("peerContactEventRemoveStream","Peer connection stream removed.",a,c)},this.remoteStreamVideoElement=t,this.remoteStreamVideoElement.srcObject=this.remoteStream,!0}return!1}addTrackStreamToRemoteVideoElement(t,e){if(e){let c=this.getTracks();if(c!=null&&c.length>0&&(this.mediaStreamTracks.push(e),this.mediaStreamTracks.length==c.length)){let o=this,l=new MediaStream;for(var a=0;a<this.mediaStreamTracks.length;a++)l.addTrack(this.mediaStreamTracks[a]);return this.remoteStream=l,this.remoteStream.onremovetrack=n=>{o.eventContactPeer("peerContactEventRemoveStream","Peer connection stream removed.",o,n)},this.remoteStreamVideoElement=t,this.remoteStreamVideoElement.srcObject=this.remoteStream,!0}}return!1}setAllRemoteStreamToVideoElement(t,e){if(e&&e.length>0){let l=this.getTracks();if(l!=null&&l.length>0){for(var a=0;a<e.length;a++){let n=e[a].getTracks();for(var c=0;c<n.length;c++)this.mediaStreamTracks.push(n[c])}if(this.mediaStreamTracks.length==l.length){let n=this,r=new MediaStream;for(var o=0;o<this.mediaStreamTracks.length;o++)r.addTrack(this.mediaStreamTracks[o]);return this.remoteStream=r,this.remoteStream.onremovetrack=i=>{n.eventContactPeer("peerContactEventRemoveStream","Peer connection stream removed.",n,i)},this.remoteStreamVideoElement=t,this.remoteStreamVideoElement.srcObject=this.remoteStream,!0}}}return!1}setRemoteVideoElement(t){this.remoteStreamVideoElement=t}getStream(){return this.remoteStream}getStreamSenders(){return this.remoteStreamSenders}getStreamTransceivers(){return this.remoteStreamTransceivers}setFileInfo(t,e,a,c){this.fileName=t,this.fileSize=e,this.fileType=a,this.fileLastModified=c}close(){if(!this.closed){this.closed=!0;try{this.closeStream(),this.closeReceiveDataChannel(),this.closeSendDataChannel()}catch(e){d("error","Error closing streams",e)}this.remoteStream=null,this.remoteStreamVideoElement=null;try{for(var t=0;t<this.remoteStreamSenders.length;t++)this.peerConnection.removeTrack(this.remoteStreamSenders[t]);this.remoteStreamSenders=null,this.remoteStreamSenders=[]}catch(e){d("error","Error closing RTCRtpSender",e)}try{this.remoteStreamTransceivers=null,this.remoteStreamTransceivers=[]}catch(e){d("error","Error closing RTCRtpTransceiver",e)}try{this.remoteTracks=null,this.remoteTracks=[],this.mediaStreamTracks=null,this.mediaStreamTracks=[]}catch(e){d("error","Error closing Tracks",e)}try{this.peerConnection.close(),this.peerConnection=null}catch(e){d("error","Error closing RTCPeerConnection",e)}try{this.stopRecording()}catch(e){d("error","Error stopping recording",e)}this.eventContactPeer("peerContactEventClose","Peer connection has been closed.",this,null);try{let e=this.parent.contactPeers.indexOf(this);e>-1&&this.parent.contactPeers.splice(e,1)}catch{}}}closeMediaStreamTracks(){this.mediaStreamTracks&&(this.mediaStreamTracks=null,this.mediaStreamTracks=[])}closeReceiveDataChannel(){this.receiveDataChannel&&(this.receiveDataChannel.close(),this.receiveDataChannel=null)}closeSendDataChannel(){this.sendDataChannel&&(this.sendDataChannel.close(),this.sendDataChannel=null)}addStreamTracks(t){if(t)try{if(this.peerConnection){let e=this,a=this.peerConnection;t.getTracks().forEach(function(c){e.remoteStreamSenders.push(a.addTrack(c,t))})}}catch(e){d("error","Error adding stream tracks to RTCPeerConnection",e)}}addStreamTracksToTransceiver(t,e){if(t)try{if(this.peerConnection){let a=this,c=this.peerConnection;t.getTracks().forEach(function(o){a.remoteStreamTransceivers.push(c.addTransceiver(o,e))})}}catch(a){d("error","Error adding stream tracks to RTCPeerConnection",a)}}addTracksToTransceiver(t,e){if(t)try{if(this.peerConnection){let a=this,c=this.peerConnection;a.remoteStreamTransceivers.push(c.addTransceiver(t,e))}}catch(a){d("error","Error adding stream tracks to RTCPeerConnection",a)}}removeStreamTracks(t){if(t)try{if(this.peerConnection){let a=this.peerConnection;for(var e=0;e<t.length;e++)a.removeTrack(t[e])}}catch(a){d("error","Error removing stream tracks from RTCPeerConnection",a)}}removeStreamTransceiverTracks(){try{this.remoteStreamTransceivers=null,this.remoteStreamTransceivers=[]}catch(t){d("error","Error closing RTCRtpTransceiver",t)}}setRemoteDescription(t){this.peerConnection&&this.peerConnection.setRemoteDescription(new RTCSessionDescription(t))}setLocalDescription(t){this.peerConnection&&this.peerConnection.setLocalDescription(t)}addIceCandidate(t){this.peerConnection&&this.peerConnection.addIceCandidate(new RTCIceCandidate(t))}onIceCandidateHandler(t){let e=this.uniqueID,a=this.applicationID,c=this.isData;t.signalling.iceCandidate(e,a,t.data.candidate,c)}muteAudioVideo(t){this.peerConnection&&this.peerConnection.getSenders&&this.peerConnection.getSenders().forEach(function(e){e.track&&(e.track.enabled=!t)})}closeStream(){this.peerConnection&&this.remoteStream&&(this.remoteStream.getTracks().forEach(function(t){t.stop()}),this.remoteStreamVideoElement&&(this.remoteStreamVideoElement.srcObject=null))}startRecording(t,e){if(this.remoteStream){let a=this.remoteStream,c=this,o={mimeType:"video/webm"};try{this.mediaRecorder=new MediaRecorder(a,t)}catch(l){d("error","Error creating MediaRecorder",l)}this.mediaRecorder&&(this.mediaRecorder.onstop=function(l){c.eventContactPeer("peerContactRecordingStopped","Peer has stopped recording.",c,l)},this.mediaRecorder.ondataavailable=function(l){l.data&&l.data.size>0&&c.eventContactPeer("peerContactRecordingData","Peer has recording data.",c,l.data)},this.mediaRecorder.start(e))}}stopRecording(){this.mediaRecorder&&(this.mediaRecorder.stop(),this.mediaRecorder=null)}pauseRecording(){this.mediaRecorder&&this.mediaRecorder.pause()}resumeRecording(){this.mediaRecorder&&this.mediaRecorder.resume()}sendOfferRequest(){let t=this.uniqueID,e=this.applicationID,a=this.peerConnection,c=this.signalling,o=this.receiveMedia;this.peerConnection&&this.peerConnection.createOffer(o).then(l=>new RTCSessionDescription(l)).then(l=>a.setLocalDescription(l).then(()=>{c.sendOffer(t,e,l)}).catch(n=>{d("error","Failed to create session description",n)})).catch(l=>{d("error","Failed to create session description",l)})}sendAnswerResponse(){let t=this.uniqueID,e=this.applicationID,a=this.peerConnection,c=this.signalling;this.peerConnection&&this.peerConnection.createAnswer().then(o=>new RTCSessionDescription(o)).then(o=>a.setLocalDescription(o).then(()=>{c.sendAnswer(t,e,o)}).catch(l=>{d("error","Failed to create session description",l)})).catch(o=>{d("error","Failed to create session description",o)})}sendFileTransferOfferRequest(t){let e=this.uniqueID,a=this.applicationID,c=this.peerConnection,o=this.signalling;this.sendDataChannel&&(this.fileToSend=t),this.peerConnection&&this.peerConnection.createOffer().then(l=>new RTCSessionDescription(l)).then(l=>c.setLocalDescription(l).then(()=>{o.sendFileTransferOffer(e,a,l,t.name,t.size,t.type,t.lastModified)}).catch(n=>{d("error","Failed to create session description",n)})).catch(l=>{d("error","Failed to create session description",l)})}sendFileTransferAnswerResponse(){let t=this.uniqueID,e=this.applicationID,a=this.peerConnection,c=this.signalling;this.peerConnection&&this.peerConnection.createAnswer().then(o=>new RTCSessionDescription(o)).then(o=>a.setLocalDescription(o).then(()=>{c.sendFileTransferAnswer(t,e,o)}).catch(l=>{d("error","Failed to create session description",l)})).catch(o=>{d("error","Failed to create session description",o)})}sendJoinConferenceOfferRequest(){let t=this.uniqueID,e=this.applicationID,a=this.peerConnection,c=this.signalling,o=this.receiveMedia;this.peerConnection&&this.peerConnection.createOffer(o).then(l=>new RTCSessionDescription(l)).then(l=>a.setLocalDescription(l).then(()=>{c.sendJoinConferenceOffer(t,e,l)}).catch(n=>{d("error","Failed to create session description",n)})).catch(l=>{d("error","Failed to create session description",l)})}sendJoinConferenceAnswerResponse(){let t=this.uniqueID,e=this.applicationID,a=this.peerConnection,c=this.signalling;this.peerConnection&&this.peerConnection.createAnswer().then(o=>new RTCSessionDescription(o)).then(o=>a.setLocalDescription(o).then(()=>{c.sendJoinConferenceAnswer(t,e,o)}).catch(l=>{d("error","Failed to create session description",l)})).catch(o=>{d("error","Failed to create session description",o)})}},C=class{signalOptions;webSocket;closed;config;eventSignalling;constructor(t){this.signalOptions=t;let e=this;this.closed=!1;let a,c=t||{},o=this.config={signallingURL:"wss://127.0.0.1:443"};for(a in c)c.hasOwnProperty(a)&&(o[a]=c[a]);try{this.webSocket=new WebSocket(o.signallingURL)}catch(l){d("error","Error connecting to WebSocket",l)}this.webSocket&&(this.webSocket.onopen=function(l){e.eventSignalling("signallingEventOpen","Signalling has opened.",e,l)},this.webSocket.onerror=function(l){e.eventSignalling("signallingEventError","Signalling has encountered and unknown error.",e,l)},this.webSocket.onclose=function(l){e.eventSignalling("signallingEventClose","Signalling has closed.",e,l)},this.webSocket.onmessage=function(l){let n=null;if(n=JSON.parse(l.data),n.response)if(n.error)e.eventSignalling("signallingEventErrorDetails","Signalling has encountered an error.",e,n.error);else if(n.applications)e.eventSignalling("signallingEventApplications","Signalling has applications",e,n.applications);else if(n.uniques)e.eventSignalling("signallingEventUniques","Signalling has uniques",e,n.uniques);else if(n.groups)e.eventSignalling("signallingEventGroups","Signalling has groups",e,n.groups);else if(n.settings&&n.settings===!0)e.eventSignalling("signallingEventSettings","Signalling settings have been applied.",e,n.settings);else if(n.contactAvailable){let r=n.contactUniqueID,i=n.contactApplicationID,s={contactUniqueID:r,contactApplicationID:i,contactAvailable:n.contactAvailable};e.eventSignalling("signallingEventAvailable","Signalling contact available.",e,s)}else if(n.contactMessage){let r=n.contactUniqueID,i=n.contactApplicationID,s={contactUniqueID:r,contactApplicationID:i,contactMessage:n.contactMessage};e.eventSignalling("signallingEventMessage","Signalling contact message.",e,s)}else if(n.clientState){let r=n.contactUniqueID,i=n.contactApplicationID,s={contactUniqueID:r,contactApplicationID:i,contactState:n.state};e.eventSignalling("signallingEventState","Signalling contact state.",e,s)}else if(n.clientDetails){let r=n.contactUniqueID,i=n.contactApplicationID,s={contactUniqueID:r,contactApplicationID:i,clientDetails:n.details};e.eventSignalling("signallingEventDetails","Signalling contact details.",e,s)}else if(n.available&&n.available===!0){let r=n.contactUniqueID,i=n.contactApplicationID,s=!1;if((n.fileTransferOffer||n.fileTransferAnswer||n.isData)&&(s=!0),n.sdp){let g={contactUniqueID:r,contactApplicationID:i,sdp:n.sdp,isData:s};e.eventSignalling("signallingEventSDP","Signalling an SDP signal has been received.",e,g)}if(n.candidate){let g={contactUniqueID:r,contactApplicationID:i,candidate:n.candidate,type:n.type,isData:s};e.eventSignalling("signallingEventCandidate","Signalling a candidate signal has been received.",e,g)}if(n.callOffer){let g={contactUniqueID:r,contactApplicationID:i};e.eventSignalling("signallingEventOffer","Signalling an offer signal has been received.",e,g)}if(n.callAnswer){let g={contactUniqueID:r,contactApplicationID:i};e.eventSignalling("signallingEventAnswer","Signalling an answer signal has been received.",e,g)}if(n.joinConferenceOffer){let g={contactUniqueID:r,contactApplicationID:i,conference:n.conferenceCall};e.eventSignalling("signallingEventJoinConferenceOffer","Signalling a join conference offer signal has been received.",e,g)}if(n.joinConferenceAnswer){let g={contactUniqueID:r,contactApplicationID:i,conference:n.conferenceCall};e.eventSignalling("signallingEventJoinConferenceAnswer","Signalling a join conference answer signal has been received.",e,g)}if(n.fileTransferOffer){let g={contactUniqueID:r,contactApplicationID:i,name:n.name,size:n.size,type:n.type,lastModified:n.lastModified,fileTransfer:n.fileTransferOffer};e.eventSignalling("signallingEventFileOffer","Signalling a file transfer offer signal has been received.",e,g)}if(n.fileTransferAnswer){let g={contactUniqueID:r,contactApplicationID:i,fileTransfer:n.fileTransferAnswer};e.eventSignalling("signallingEventFileAnswer","Signalling a file answer signal has been received.",e,g)}if(n.noanswer){let g={contactUniqueID:r,contactApplicationID:i,noanswer:n.noanswer};e.eventSignalling("signallingEventNoAnswer","Signalling the peer contact did not answer.",e,g)}if(n.endCallRemote){let g={contactUniqueID:r,contactApplicationID:i,endCallRemote:n.endCallRemote};e.eventSignalling("signallingEventEndCall","Signalling the peer contact ended the call.",e,g)}if(n.contactTypingMessage){let g={contactUniqueID:r,contactApplicationID:i,contactTypingMessage:n.contactTypingMessage,typing:n.typing};n.typing&&n.typing===!0?e.eventSignalling("signallingEventTypingMessage","Signalling the contact is typing a message.",e,g):e.eventSignalling("signallingEventTypingMessage","Signalling the contact has stopped typing.",e,g)}else{let g={contactAvailable:n.available};e.eventSignalling("signallingEventSelfAvailable","Signalling the contact is available.",e,g)}}else{let r={contactAvailable:n.available};e.eventSignalling("signallingEventSelfAvailable","Signalling the contact is not available.",e,r)}else e.eventSignalling("signallingEventErrorDetails","Signalling has encountered an unknown error.",e,null)})}onSignallingEventHandler(t){this.eventSignalling=t}changeClientSettings(t,e,a,c,o,l){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({uniqueID:t,applicationID:e,available:a,broadcast:c,broadcastAppID:o,accessToken:l}))}sendClientState(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,clientState:!0,state:a}))}sendClientDetails(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,clientDetails:!0,details:a}))}sendMessage(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,contactMessage:a}))}iceCandidate(t,e,a,c){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,candidate:a,type:"candidate",isData:c}))}noAnswer(t,e){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,noanswer:!0}))}sendEndCallToContact(t,e){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,endCallRemote:!0}))}contactAvailable(t,e){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,contactAvailable:!0}))}sendOffer(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,callOffer:!0,sdp:a}))}sendAnswer(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,callAnswer:!0,sdp:a}))}sendJoinConferenceOffer(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,joinConferenceOffer:!0,conferenceCall:!0,sdp:a}))}sendJoinConferenceAnswer(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,joinConferenceAnswer:!0,conferenceCall:!0,sdp:a}))}startedTypingMessage(t,e){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,contactTypingMessage:!0,typing:!0}))}stoppedTypingMessage(t,e){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,contactTypingMessage:!0,typing:!1}))}sendFileTransferOffer(t,e,a,c,o,l,n){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,fileTransferOffer:!0,name:c,size:o,type:l,lastModified:n,sdp:a}))}sendFileTransferAnswer(t,e,a){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,fileTransferAnswer:!0,sdp:a}))}noFileTransferAnswer(t,e){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send(JSON.stringify({contactUniqueID:t,contactApplicationID:e,noanswer:!0}))}contactUniqueIDList(){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send("uniqueids")}contactApplicationIDList(){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send("applicationids")}contactGroupList(){this.webSocket.readyState===this.webSocket.OPEN&&this.webSocket.send("uniqueapplication")}close(){if(!this.closed&&(this.closed=!0,this.webSocket)){if(this.webSocket.readyState!==this.webSocket.OPEN)return;try{this.webSocket.close(),this.webSocket=null}catch(t){d("error","Error closing signalling",t)}}}},m=class{webRtcOptions;closed;contactPeers;signalling;config;uniqueID;applicationID;mediaRecorder;localStream;localStreamVideoElement;eventWebRtcAdapter;eventWebRtcAdapterSignalling;eventWebRtcAdapterContactPeer;constructor(t){this.webRtcOptions=t;let e=this;this.closed=!1;let a,c=t||{};this.uniqueID=t.uniqueID,this.applicationID=t.applicationID,this.contactPeers=[],this.localStream=null,this.localStreamVideoElement=null,this.mediaRecorder=null;let o=this.config={peerConnectionConfiguration:{iceServers:[{urls:"stun:stun.l.google.com:19302"}]},peerConnectionConstraints:{optional:[]},receiveOfferMedia:{offerToReceiveAudio:1,offerToReceiveVideo:1},signallingURL:"wss://127.0.0.1:443"};for(a in c)c.hasOwnProperty(a)&&(this.config[a]=c[a]);let l={signallingURL:o.signallingURL};this.signalling=new C(l),this.signalling.onSignallingEventHandler((n,r,i,s)=>{e.eventWebRtcAdapterSignalling(n,r,i,s)})}onWebRtcAdapterEventHandler(t){this.eventWebRtcAdapter=t}onContactPeerEventHandler(t){this.eventWebRtcAdapterContactPeer=t}onSignallingEventHandler(t){this.eventWebRtcAdapterSignalling=t}changeClientSettings(t,e,a,c,o,l){this.uniqueID=t,this.applicationID=e,this.signalling.changeClientSettings(t,e,a,c,o,l)}getUniqueID(){return this.uniqueID}getApplicationID(){return this.applicationID}startedTypingMessage(t,e){this.signalling.startedTypingMessage(t,e)}stoppedTypingMessage(t,e){this.signalling.stoppedTypingMessage(t,e)}contactUniqueIDList(){this.signalling.contactUniqueIDList()}contactApplicationIDList(){this.signalling.contactApplicationIDList()}contactGroupList(){this.signalling.contactGroupList()}createContactPeer(t){let e=this;t.parent=e,t.signalling=this.signalling;let a=new S(t);return a.onContactPeerEventHandler((c,o,l,n)=>{e.eventWebRtcAdapterContactPeer(c,o,l,n)}),this.contactPeers.push(a),a}removeContactPeers(){this.getContactPeers().forEach(function(t){t.close()})}removeContactPeer(t,e,a){this.getContactPeers().forEach(function(c){c.uniqueID===t&&c.applicationID===e&&c.isData===a&&c.close()})}getContactPeers(){return this.contactPeers.filter(function(t){return!0})}getContactPeer(t,e,a){return this.contactPeers.filter(function(c){return c.uniqueID===t&&c.applicationID===e&&c.isData===a})}isContactPeer(t,e){return this.contactPeers.filter(function(a){return a.uniqueID===t&&a.applicationID===e})}sendStateToAllContacts(t){this.contactPeers.forEach(function(e){e.sendState(t)})}sendMessageToAllContacts(t){this.contactPeers.forEach(function(e){e.sendMessage(t)})}sendMessageToContact(t,e,a,c){this.contactPeers.forEach(function(o){o.uniqueID===t&&o.applicationID===e&&o.isData===c&&o.sendMessage(a)})}sendDetailsToAllContacts(t){this.contactPeers.forEach(function(e){e.sendDetails(t)})}sendDetailsToContact(t,e,a,c){this.contactPeers.forEach(function(o){o.uniqueID===t&&o.applicationID===e&&o.isData===c&&o.sendDetails(a)})}sendEndCallToAllContacts(){this.contactPeers.forEach(function(t){t.sendEndCall()})}sendEndCallToContact(t,e,a){this.contactPeers.forEach(function(c){c.uniqueID===t&&c.applicationID===e&&c.isData===a&&c.sendEndCall()})}setContactFileInfo(t,e,a,c,o,l,n){this.contactPeers.forEach(function(r){r.uniqueID===t&&r.applicationID===e&&r.isData===a&&r.setFileInfo(c,o,l,n)})}isContactAvailable(t,e,a){this.contactPeers.forEach(function(c){c.uniqueID===t&&c.applicationID===e&&c.isData===a&&c.isAvailable()})}close(){if(!this.closed){this.closed=!0;try{this.closeStream(),this.localStream=null,this.localStreamVideoElement=null}catch(t){d("error","Error closing stream",t)}try{this.signalling.close(),this.signalling=null}catch(t){d("error","Error closing signalling",t)}try{this.stopRecording()}catch(t){d("error","Error stopping recording",t)}this.removeContactPeers()}}muteAudioVideo(t){this.contactPeers.forEach(function(e){e.muteAudioVideo(t)})}closeStream(){this.localStream&&(this.localStream.getTracks().forEach(function(t){t.stop()}),this.localStreamVideoElement&&(this.localStreamVideoElement.srcObject=null))}createStream(t,e){let a=this;navigator.mediaDevices.getUserMedia({audio:t,video:e}).then(function(c){a.localStream=c,a.localStreamVideoElement.srcObject=a.localStream}).catch(function(c){d("error","Error could not create stream",c)})}createStreamCapture(t){let e=this,a={video:{displaySurface:t},audio:!1};navigator.mediaDevices.getDisplayMedia(a).then(function(c){e.localStream=c,e.localStreamVideoElement.srcObject=e.localStream}).catch(function(c){d("error","Error could not create capture stream",c)})}createStreamEx(t){let e=this;navigator.mediaDevices.getUserMedia(t).then(function(a){e.localStream=a,e.localStreamVideoElement.srcObject=e.localStream}).catch(function(a){d("error","Error could not create stream",a)})}createStreamCaptureEx(t){let e=this;navigator.mediaDevices.getDisplayMedia(t).then(function(a){e.localStream=a,e.localStreamVideoElement.srcObject=e.localStream}).catch(function(a){d("error","Error could not create capture stream",a)})}setLocalStreamToVideoElement(t){return this.localStream?(this.localStreamVideoElement=t,this.localStreamVideoElement.srcObject=this.localStream,!0):!1}getAudioInputDevices(t){let e=[];navigator.mediaDevices.enumerateDevices().then(function(a){for(var c=0;c!==a.length;++c){let o=a[c];o.kind==="audioinput"&&e.push(o)}t(e)}).catch(function(a){d("error","Error could not get audio input devices",a)})}getAudioOutputDevices(t){let e=[];navigator.mediaDevices.enumerateDevices().then(function(a){for(var c=0;c!==a.length;++c){let o=a[c];o.kind==="audiooutput"&&e.push(o)}t(e)}).catch(function(a){d("error","Error could not get audio output devices",a)})}getVideoInputDevices(t){let e=[];navigator.mediaDevices.enumerateDevices().then(function(a){for(var c=0;c!==a.length;++c){let o=a[c];o.kind==="videoinput"&&e.push(o)}t(e)}).catch(function(a){d("error","Error could not get video input devices",a)})}setLocalVideoElement(t){this.localStreamVideoElement=t}getStream(){return this.localStream}setStream(t){this.localStream=t}startRecording(t,e){if(this.localStream){var a=this.localStream;try{this.mediaRecorder=new MediaRecorder(a,t)}catch(c){d("error","Error creating MediaRecorder",c)}if(this.mediaRecorder){let c=this;this.mediaRecorder.onstop=function(o){c.eventWebRtcAdapter("adapterRecordingStopped","Adapter has stopped recording.",c,o)},this.mediaRecorder.ondataavailable=function(o){o.data&&o.data.size>0&&c.eventWebRtcAdapter("adapterRecordingData","Adapter has recording data.",c,o.data)},this.mediaRecorder.start(e)}}}stopRecording(){this.mediaRecorder&&(this.mediaRecorder.stop(),this.mediaRecorder=null)}pauseRecording(){this.mediaRecorder&&this.mediaRecorder.pause()}resumeRecording(){this.mediaRecorder&&this.mediaRecorder.resume()}},b=class{webRtcOptions;webrtcadapter;closed;config;parent;eventWebRtc;constructor(t){this.webRtcOptions=t;let e=this;this.closed=!1;let a;this.parent=null;let c=t||{},o=this.config={peerConnectionConfiguration:{iceServers:[{urls:"stun:stun.l.google.com:19302"}]},peerConnectionConstraints:{optional:[]},receiveOfferMedia:{offerToReceiveAudio:1,offerToReceiveVideo:1},signallingURL:"wss://127.0.0.1:443",localVideo:{autoplay:!0,mirror:!0,muted:!0}};for(a in c)c.hasOwnProperty(a)&&(this.config[a]=c[a]);this.webrtcadapter=new m(this.config),this.webrtcadapter.onWebRtcAdapterEventHandler((l,n,r,i)=>{switch(l){case"adapterRecordingData":{let s={data:i,text:n,object:r,objectName:"WebRtcAdapter",objectEvent:i,rtc:e};e.eventWebRtc("recordingData",s);break}case"adapterRecordingStopped":{let s={evt:i,text:n,object:r,objectName:"WebRtcAdapter",objectEvent:i,rtc:e};e.eventWebRtc("recordingStopped",s);break}}}),this.webrtcadapter.onContactPeerEventHandler((l,n,r,i)=>{switch(l){case"peerContactEventICEStateChange":{let s={contact:r,state:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactICEStateChange",s);break}case"peerContactEventICECandidateError":{let s={contact:r,error:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactICECandidateError",s);break}case"peerContactEventICECandidate":{let s={contact:r,message:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactICECandidate",s);break}case"peerContactEventSignalingStateChange":{let s={contact:r,state:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactSignalingStateChange",s);break}case"peerContactEventNegotiationNeeded":{let s={contact:r,state:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactNegotiationNeeded",s);break}case"peerContactEventRemoveStream":{let s={contact:r,remove:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactRemoveStream",s);break}case"peerContactEventAddStream":{let s={contact:r,add:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactAddStream",s);break}case"peerContactEventAddTrack":{let s={contact:r,add:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactAddStream",s);break}case"peerContactEventDataChannelReceivedSize":{let s={contact:r,size:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactReceiveSize",s);break}case"peerContactEventDataChannelReceiveComplete":{let s={contact:r,buffer:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactReceiveComplete",s);break}case"peerContactEventDataChannelOpen":{let s={contact:r,open:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactReceiveOpen",s);break}case"peerContactEventDataChannelClose":{let s={contact:r,close:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactReceiveClose",s);break}case"peerContactEventDataChannelError":{let s={contact:r,error:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactReceiveError",s);break}case"peerContactEventDataChannelSentSize":{let s={contact:r,size:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactSentSize",s);break}case"peerContactEventDataChannelSentComplete":{let s={contact:r,buffer:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactSentComplete",s);break}case"peerContactEventDataChannelSentMessage":{let s={contact:r,message:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactSentMessage",s);break}case"peerContactEventClose":{let s={contact:r,session:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactClose",s);break}case"peerContactEventSessionError":{let s={contact:r,session:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactSessionError",s);break}case"peerContactRecordingData":{let s={contact:r,data:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactRecordingData",s);break}case"peerContactRecordingStopped":{let s={contact:r,evt:i,text:n,object:r,objectName:"ContactPeer",objectEvent:i,rtc:e};e.eventWebRtc("contactRecordingStopped",s);break}}}),this.webrtcadapter.onSignallingEventHandler((l,n,r,i)=>{switch(l){case"signallingEventOpen":{let s={open:!0,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("connectionOpen",s);break}case"signallingEventError":{let s={error:!0,data:i.data,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("connectionError",s);break}case"signallingEventClose":{let s={close:!0,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("connectionClose",s);break}case"signallingEventErrorDetails":{let s={error:i,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalError",s);break}case"signallingEventApplications":{let s={list:i,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalApplications",s);break}case"signallingEventUniques":{let s={list:i,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalUniques",s);break}case"signallingEventGroups":{let s={list:i,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalGroups",s);break}case"signallingEventSettings":{let s={setting:i,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalSettings",s);break}case"signallingEventAvailable":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),available:i.contactAvailable,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalAvailable",g);break}case"signallingEventSelfAvailable":{let s={available:i.contactAvailable,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalSelfAvailable",s);break}case"signallingEventMessage":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),message:i.contactMessage,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalMessage",g);break}case"signallingEventState":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),state:i.contactState,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalState",g);break}case"signallingEventDetails":{let s=e.createContact(i.contactUniqueID,i.contactApplicationID);s.setContactDetails(i.clientDetails);let g={contact:s,details:i.clientDetails,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalDetails",g);break}case"signallingEventJoinConferenceOffer":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),conference:i.conference,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalJoinConferenceOffer",g);break}case"signallingEventJoinConferenceAnswer":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),conference:i.conference,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalJoinConferenceAnswer",g);break}case"signallingEventSDP":{let s=null;i.isData?s=e.createContactData(i.contactUniqueID,i.contactApplicationID):s=e.createContact(i.contactUniqueID,i.contactApplicationID);let g={contact:s,text:n,isData:i.isData,sdp:i.sdp,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalSDP",g);break}case"signallingEventCandidate":{let s=null;i.isData?s=e.createContactData(i.contactUniqueID,i.contactApplicationID):s=e.createContact(i.contactUniqueID,i.contactApplicationID);let g={contact:s,text:n,isData:i.isData,candidate:i.candidate,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalIceCandidate",g);break}case"signallingEventOffer":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalOffer",g);break}case"signallingEventAnswer":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalAnswer",g);break}case"signallingEventFileOffer":{let s=e.createContactData(i.contactUniqueID,i.contactApplicationID);s.setFileInfo(i.name,i.size,i.type,i.lastModified);let g={contact:s,name:i.name,size:i.size,type:i.type,lastModified:i.lastModified,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalFileOffer",g);break}case"signallingEventFileAnswer":{let g={contact:e.createContactData(i.contactUniqueID,i.contactApplicationID),text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalFileAnswer",g);break}case"signallingEventNoAnswer":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalNoAnswer",g);break}case"signallingEventEndCall":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalEndCall",g);break}case"signallingEventTypingMessage":{let g={contact:e.createContact(i.contactUniqueID,i.contactApplicationID),typing:i.typing,text:n,object:r,objectName:"Signalling",objectEvent:i,rtc:e};e.eventWebRtc("signalTyping",g);break}}})}onWebRtcEventHandler(t){this.eventWebRtc=t}createContact(t,e){let a=this.webrtcadapter.getContactPeer(t,e,!1);if(a[0])return a[0];var c={uniqueID:t,applicationID:e,isData:!1};return this.webrtcadapter.createContactPeer(c)}createContactData(t,e){var a=this.webrtcadapter.getContactPeer(t,e,!0);if(a[0])return a[0];var c={uniqueID:t,applicationID:e,isData:!0};return this.webrtcadapter.createContactPeer(c)}removeContact(t,e){this.webrtcadapter.getContactPeer(t,e,!1)[0]&&this.webrtcadapter.removeContactPeer(t,e,!1)}removeContactData(t,e){this.webrtcadapter.getContactPeer(t,e,!0)[0]&&this.webrtcadapter.removeContactPeer(t,e,!0)}isContactPeer(t,e){return!!this.webrtcadapter.isContactPeer(t,e)[0]}close(){if(!this.closed){this.closed=!0;try{this.webrtcadapter.close()}catch(t){d("error","Error closing the WebRTC interface",t)}}}changeClientSettings(t,e,a,c,o,l){this.webrtcadapter.changeClientSettings(t,e,a,c,o,l)}createStream(t,e){this.webrtcadapter.createStream(t,e)}createStreamSource(t,e){let a={audio:{deviceId:t?{exact:t}:void 0},video:{deviceId:e?{exact:e}:void 0}};this.webrtcadapter.createStreamEx(a)}createStreamCapture(t){this.webrtcadapter.createStreamCapture(t)}createStreamEx(t){this.webrtcadapter.createStreamEx(t)}createStreamCaptureEx(t){this.webrtcadapter.createStreamCaptureEx(t)}setLocalVideoElement(t){this.webrtcadapter.setLocalVideoElement(t)}setLocalStreamToVideoElement(t){this.webrtcadapter.setLocalStreamToVideoElement(t)}getAudioInputSources(t){let e=1,a=[];this.webrtcadapter.getAudioInputDevices(function(c){c.forEach(function(o){let l={deviceID:o.deviceId,deviceText:o.label||"microphone "+e};a.push(l),e++}),t(a)})}getAudioOutputSources(t){let e=1,a=[];this.webrtcadapter.getAudioOutputDevices(function(c){c.forEach(function(o){let l={deviceID:o.deviceId,deviceText:o.label||"speaker "+e};a.push(l),e++}),t(a)})}getVideoInputSources(t){let e=1,a=[];this.webrtcadapter.getVideoInputDevices(function(c){c.forEach(function(o){let l={deviceID:o.deviceId,deviceText:o.label||"camera "+e};a.push(l),e++}),t(a)})}attachSinkIdVideoElement(t,e){if(typeof t.sinkId<"u"){let a=this;t.setSinkId(e).then(function(){let c={data:e,text:"App has attached to Sink Id.",object:a,objectName:"WebRtcApp",rtc:a};a.eventWebRtc("attachSinkId",c)}).catch(function(c){d("error","Error assigning device ID",c)})}else d("error","Browser does not support output device selection.",null)}takePicture(t,e){let a=null,c=t.videoWidth,o=t.videoHeight,l=e.getContext("2d");return e.width=c,e.height=o,l.drawImage(t,0,0,c,o),a=e.toDataURL("image/png"),a}closeStream(){this.webrtcadapter.closeStream()}};function D(t,e,a){let c=null;try{t.signallingURL!==""?c=new u(t):d("warn","WebRTC Interface","Has not been initialised, signalling URL does not exist.")}catch(o){d("Error","Could not start the WebRTC interface",o)}if(c)try{e(c,a)}catch(o){d("Error","Could not initialise the WebRTC interface",o)}else d("warn","WebRTC Interface","Has not been initialised")}function E(t){if(t)try{t.webrtc.close()}catch(e){d("Error","Could not stop the WebRTC interface",e)}else d("warn","WebRTC Interface","Has not been initialised")}var u=class{webRtcOptions;webrtc;config;parent;constructor(t){this.webRtcOptions=t;let e=this,a;this.parent=null;let c=t||{},o=this.config={debug:!1,peerConnectionConfiguration:{iceServers:[{urls:"stun:stun.l.google.com:19302"}]},peerConnectionConstraints:{optional:[]},receiveOfferMedia:{offerToReceiveAudio:1,offerToReceiveVideo:1},signallingURL:"wss://127.0.0.1:443",localVideo:{autoplay:!0,mirror:!0,muted:!0}};for(a in c)c.hasOwnProperty(a)&&(this.config[a]=c[a]);this.webrtc=new b(this.config),this.webrtc.parent=e,this.webrtc.onWebRtcEventHandler((l,n)=>{e.config.debug&&d("info","Event: "+l,n);try{switch(l){case"connectionOpen":{e.connectionOpen(n);break}case"connectionError":{e.connectionError(n);break}case"connectionClose":{e.connectionClose(n);break}case"signalError":{e.signalError(n);break}case"signalApplications":{e.signalApplications(n);break}case"signalUniques":{e.signalUniques(n);break}case"signalGroups":{e.signalGroups(n);break}case"signalSettings":{e.signalSettings(n);break}case"signalAvailable":{e.signalAvailable(n);break}case"signalSelfAvailable":{e.signalSelfAvailable(n);break}case"signalMessage":{e.signalMessage(n);break}case"signalState":{e.signalState(n);break}case"signalDetails":{e.signalDetails(n);break}case"signalJoinConferenceOffer":{e.signalJoinConferenceOffer(n);break}case"signalJoinConferenceAnswer":{e.signalJoinConferenceAnswer(n);break}case"signalSDP":{e.signalSDP(n);break}case"signalIceCandidate":{e.signalIceCandidate(n);break}case"signalOffer":{e.signalOffer(n);break}case"signalAnswer":{e.signalAnswer(n);break}case"signalFileOffer":{e.signalFileOffer(n);break}case"signalFileAnswer":{e.signalFileAnswer(n);break}case"signalNoAnswer":{e.signalNoAnswer(n);break}case"signalEndCall":{e.signalEndCall(n);break}case"signalTyping":{e.signalTyping(n);break}case"contactICEStateChange":{e.contactICEStateChange(n);break}case"contactICECandidateError":{e.contactICECandidateError(n);break}case"contactICECandidate":{e.contactICECandidate(n);break}case"contactSignalingStateChange":{e.contactSignalingStateChange(n);break}case"contactNegotiationNeeded":{e.contactNegotiationNeeded(n);break}case"contactRemoveStream":{e.contactRemoveStream(n);break}case"contactAddStream":{e.contactAddStream(n);break}case"contactReceiveSize":{e.contactReceiveSize(n);break}case"contactReceiveComplete":{e.contactReceiveComplete(n);break}case"contactReceiveOpen":{e.contactReceiveOpen(n);break}case"contactReceiveClose":{e.contactReceiveClose(n);break}case"contactReceiveError":{e.contactReceiveError(n);break}case"contactSentSize":{e.contactSentSize(n);break}case"contactSentComplete":{e.contactSentComplete(n);break}case"contactSentMessage":{e.contactSentMessage(n);break}case"contactClose":{e.contactClose(n);break}case"contactSessionError":{e.contactSessionError(n);break}case"contactRecordingData":{e.contactRecordingData(n);break}case"contactRecordingStopped":{e.contactRecordingStopped(n);break}case"recordingData":{e.recordingData(n);break}case"recordingStopped":{e.recordingStopped(n);break}case"attachSinkId":{e.attachSinkId(n);break}}}catch(r){d("error","Error:",r)}})}connectionOpen;onConnectionOpen(t){this.connectionOpen=t}connectionError;onConnectionError(t){this.connectionError=t}connectionClose;onConnectionClose(t){this.connectionClose=t}signalError;onSignalError(t){this.signalError=t}signalApplications;onSignalApplications(t){this.signalApplications=t}signalUniques;onSignalUniques(t){this.signalUniques=t}signalGroups;onSignalGroups(t){this.signalGroups=t}signalSettings;onSignalSettings(t){this.signalSettings=t}signalAvailable;onSignalAvailable(t){this.signalAvailable=t}signalSelfAvailable;onSignalSelfAvailable(t){this.signalSelfAvailable=t}signalMessage;onSignalMessage(t){this.signalMessage=t}signalState;onSignalState(t){this.signalState=t}signalDetails;onSignalDetails(t){this.signalDetails=t}signalJoinConferenceOffer;onSignalJoinConferenceOffer(t){this.signalJoinConferenceOffer=t}signalJoinConferenceAnswer;onSignalJoinConferenceAnswer(t){this.signalJoinConferenceAnswer=t}signalSDP;onSignalSDP(t){this.signalSDP=t}signalIceCandidate;onSignalIceCandidate(t){this.signalIceCandidate=t}signalOffer;onSignalOffer(t){this.signalOffer=t}signalAnswer;onSignalAnswer(t){this.signalAnswer=t}signalFileOffer;onSignalFileOffer(t){this.signalFileOffer=t}signalFileAnswer;onSignalFileAnswer(t){this.signalFileAnswer=t}signalNoAnswer;onSignalNoAnswer(t){this.signalNoAnswer=t}signalEndCall;onSignalEndCall(t){this.signalEndCall=t}signalTyping;onSignalTyping(t){this.signalTyping=t}contactICEStateChange;onContactICEStateChange(t){this.contactICEStateChange=t}contactICECandidateError;onContactICECandidateError(t){this.contactICECandidateError=t}contactICECandidate;onContactICECandidate(t){this.contactICECandidate=t}contactSignalingStateChange;onContactSignalingStateChange(t){this.contactSignalingStateChange=t}contactNegotiationNeeded;onContactNegotiationNeeded(t){this.contactNegotiationNeeded=t}contactRemoveStream;onContactRemoveStream(t){this.contactRemoveStream=t}contactAddStream;onContactAddStream(t){this.contactAddStream=t}contactReceiveSize;onContactReceiveSize(t){this.contactReceiveSize=t}contactReceiveComplete;onContactReceiveComplete(t){this.contactReceiveComplete=t}contactReceiveOpen;onContactReceiveOpen(t){this.contactReceiveOpen=t}contactReceiveClose;onContactReceiveClose(t){this.contactReceiveClose=t}contactReceiveError;onContactReceiveError(t){this.contactReceiveError=t}contactSentSize;onContactSentSize(t){this.contactSentSize=t}contactSentComplete;onContactSentComplete(t){this.contactSentComplete=t}contactSentMessage;onContactSentMessage(t){this.contactSentMessage=t}contactClose;onContactClose(t){this.contactClose=t}contactSessionError;onContactSessionError(t){this.contactSessionError=t}contactRecordingData;onContactRecordingData(t){this.contactRecordingData=t}contactRecordingStopped;onContactRecordingStopped(t){this.contactRecordingStopped=t}recordingData;onRecordingData(t){this.recordingData=t}recordingStopped;onRecordingStopped(t){this.recordingStopped=t}attachSinkId;onAttachSinkId(t){this.attachSinkId=t}};export{u as WebRtc,D as startWebRTC,E as stopWebRTC};
